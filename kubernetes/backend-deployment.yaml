apiVersion: v1
kind: ConfigMap
metadata:
  name: backend-config
  namespace: ecommerce
data:
  DB_HOST: "ecommerce-database-service"
  DB_PORT: "3306"
  DB_NAME: "ecommerce"
  DB_USER: "ecommerce_user"
  GIN_MODE: "release"
---
apiVersion: v1
kind: Secret
metadata:
  name: backend-secret
  namespace: ecommerce
type: Opaque
data:
  # Base64 encoded values - change these in production
  DB_PASS: ZWNvbTEyMw==
  JWT_SECRET: ZjlhNGIzZTJkNWM4ZjdlMWEwYjZjM2Q0ZThmOWEyYjdjNmQwZTVmMWI0YThjOWQ3ZTJmNmEzYjBjOGQ0ZTk=

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ecommerce-backend
  namespace: ecommerce
  labels:
    app: ecommerce-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ecommerce-backend
  template:
    metadata:
      labels:
        app: ecommerce-backend
    spec:
      containers:
      - name: backend
        image: 10.34.100.141:30500/ecommerce-backend:${BUILD_NUMBER}
        ports:
        - containerPort: 8080
        env:
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: backend-config
              key: DB_HOST
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: backend-config
              key: DB_PORT
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: backend-config
              key: DB_NAME
        - name: DB_USER
          valueFrom:
            configMapKeyRef:
              name: backend-config
              key: DB_USER
        - name: DB_PASS
          valueFrom:
            secretKeyRef:
              name: backend-secret
              key: DB_PASS
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: backend-secret
              key: JWT_SECRET
        - name: GIN_MODE
          valueFrom:
            configMapKeyRef:
              name: backend-config
              key: GIN_MODE
        - name: GOMAXPROCS
          value: "1"
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 45
          periodSeconds: 15
          failureThreshold: 5
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 10
          failureThreshold: 3
          timeoutSeconds: 5
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities:
            drop:
            - ALL
      restartPolicy: Always