apiVersion: v1
kind: ConfigMap
metadata:
  name: database-config
  namespace: ecommerce
data:
  MARIADB_DATABASE: "ecommerce"
  MARIADB_USER: "ecom_user"
---
apiVersion: v1
kind: Secret
metadata:
  name: database-secret
  namespace: ecommerce
type: Opaque
data:
  # Base64 encoded values consistent with Docker Compose .env file
  # ecom123 in base64
  MARIADB_PASSWORD: ZWNvbTEyMw==      
  MARIADB_ROOT_PASSWORD: ZWNvbTEyMw== 
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ecommerce-database
  namespace: ecommerce
  labels:
    app: ecommerce-database
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ecommerce-database
  template:
    metadata:
      labels:
        app: ecommerce-database
    spec:
      containers:
      - name: mariadb
        image: mariadb:latest
        ports:
        - containerPort: 3306
        env:
        - name: MARIADB_DATABASE
          valueFrom:
            configMapKeyRef:
              name: database-config
              key: MARIADB_DATABASE
        - name: MARIADB_USER
          valueFrom:
            configMapKeyRef:
              name: database-config
              key: MARIADB_USER
        - name: MARIADB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: database-secret
              key: MARIADB_PASSWORD
        - name: MARIADB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: database-secret
              key: MARIADB_ROOT_PASSWORD
        # MariaDB optimization settings untuk environment development
        args:
          - --innodb-buffer-pool-size=128M
          - --innodb-log-file-size=32M
          - --innodb-log-buffer-size=8M
          - --query-cache-size=32M
          - --thread-cache-size=8
          - --max-connections=100
          - --table-open-cache=256
          - --character-set-server=utf8mb4
          - --collation-server=utf8mb4_unicode_ci
        volumeMounts:
        - name: mysql-data
          mountPath: /var/lib/mysql
        - name: init-sql
          mountPath: /docker-entrypoint-initdb.d
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          exec:
            command:
            - mysqladmin
            - ping
            - -h
            - localhost
            - -u
            - root
            - -pecom123
          initialDelaySeconds: 90
          periodSeconds: 30
          failureThreshold: 5
          timeoutSeconds: 15
        readinessProbe:
          exec:
            command:
            - mysqladmin
            - ping
            - -h
            - localhost
            - -u
            - root
            - -pecom123
          initialDelaySeconds: 30
          periodSeconds: 15
          failureThreshold: 3
          timeoutSeconds: 10
        securityContext:
          runAsUser: 999
          runAsGroup: 999
          allowPrivilegeEscalation: false
      volumes:
      - name: mysql-data
        persistentVolumeClaim:
          claimName: mysql-pvc
      - name: init-sql
        configMap:
          name: init-sql-config
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc
  namespace: ecommerce
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: init-sql-config
  namespace: ecommerce
data:
  init.sql: |
    -- Disable foreign key checks temporarily to drop tables if needed
    SET FOREIGN_KEY_CHECKS = 0;

    -- Drop existing tables if needed
    DROP TABLE IF EXISTS reviews, payments, order_items, orders, cart_items, products, categories, users;

    -- Re-enable foreign key checks
    SET FOREIGN_KEY_CHECKS = 1;

    -- Create 'users' table
    CREATE TABLE users (
        id CHAR(36) PRIMARY KEY,
        name VARCHAR(255) NOT NULL,
        email VARCHAR(255) UNIQUE NOT NULL,
        password VARCHAR(255) NOT NULL,
        role ENUM('admin', 'seller', 'buyer') DEFAULT 'buyer',
        is_active BOOLEAN DEFAULT 1,
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
    );

    -- Create 'categories' table
    CREATE TABLE categories (
        id CHAR(36) PRIMARY KEY,
        name VARCHAR(255) NOT NULL,
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
    );

    -- Create 'products' table
    CREATE TABLE products (
        id CHAR(36) PRIMARY KEY,
        name VARCHAR(255) NOT NULL,
        description TEXT,
        price DECIMAL(10, 2) NOT NULL,
        stock INT NOT NULL,
        image_url TEXT,
        seller_id CHAR(36),
        category_id CHAR(36),
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
        FOREIGN KEY (seller_id) REFERENCES users(id),
        FOREIGN KEY (category_id) REFERENCES categories(id)
    );

    -- Create 'orders' table
    CREATE TABLE orders (
        id CHAR(36) PRIMARY KEY,
        user_id CHAR(36) NOT NULL,
        total_price DECIMAL(10, 2) NOT NULL,
        status ENUM('pending', 'paid', 'processing', 'shipped', 'completed', 'cancelled') DEFAULT 'pending',
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
        FOREIGN KEY (user_id) REFERENCES users(id)
    );

    -- Create 'order_items' table
    CREATE TABLE order_items (
        id CHAR(36) PRIMARY KEY,
        order_id CHAR(36) NOT NULL,
        product_id CHAR(36) NOT NULL,
        quantity INT NOT NULL,
        price DECIMAL(10, 2) NOT NULL,
        status ENUM('pending', 'paid', 'processing', 'shipped', 'delivered', 'cancelled') DEFAULT 'pending',
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
        FOREIGN KEY (order_id) REFERENCES orders(id),
        FOREIGN KEY (product_id) REFERENCES products(id)
    );

    -- Create 'cart_items' table
    CREATE TABLE cart_items (
        id CHAR(36) PRIMARY KEY,
        user_id CHAR(36) NOT NULL,
        product_id CHAR(36) NOT NULL,
        quantity INT NOT NULL,
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
        FOREIGN KEY (user_id) REFERENCES users(id),
        FOREIGN KEY (product_id) REFERENCES products(id)
    );

    -- Create 'payments' table (dengan amount FLOAT)
    CREATE TABLE payments (
        id CHAR(36) PRIMARY KEY,
        order_id CHAR(36) NOT NULL,
        amount FLOAT NOT NULL,
        snap_token VARCHAR(255) NOT NULL,
        transaction_id VARCHAR(255),
        status ENUM('pending', 'success', 'failed', 'expired', 'cancel') DEFAULT 'pending',
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
        FOREIGN KEY (order_id) REFERENCES orders(id)
    );

    -- Create 'reviews' table
    CREATE TABLE reviews (
        id CHAR(36) PRIMARY KEY,
        user_id CHAR(36) NOT NULL,
        product_id CHAR(36) NOT NULL,
        rating INT NOT NULL,
        comment TEXT,
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        FOREIGN KEY (user_id) REFERENCES users(id),
        FOREIGN KEY (product_id) REFERENCES products(id)
    );

    -- Seeder untuk tabel Users
    INSERT INTO users (id, name, email, password, role, is_active, created_at, updated_at) VALUES
    ('96ec37f4-a608-41ee-b942-5439f0294308', 'admin', 'admin123@gmail.com', 'admin123', 'admin', true, NOW(), NOW()),
    ('812e2505-0ccf-4d5f-8c0a-78f3c4a64e90', 'ahkong', 'ahkong@gmail.com', 'seller123', 'seller', true, NOW(), NOW()),
    ('def2a5e7-f253-4d5a-8dd3-ac0c5fe9c342', 'seluvis', 'seluvis@gmail.com', 'seller123', 'seller', true, NOW(), NOW());

    -- Seeder untuk tabel Categories
    INSERT INTO categories (id, name) VALUES
    ('c0530a1c-8000-4566-8d9a-e95375b2275f', 'laptop'),
    ('d49d2680-bf34-4d9f-bb89-c47db7724cf1', 'hp'),
    ('ba03504c-bbf4-4b7a-bf64-b85d89c5f46f', 'spare-part'),
    ('ce93cd22-90e3-47fe-9130-54bfb59095e0', 'accessories');

    -- PRODUCTS
    INSERT INTO products (id, name, description, price, stock, image_url, seller_id, category_id, created_at, updated_at)
    VALUES 
      ('7b03a3b4-3e0c-4d4b-9c01-b96b6d347a01', 'Laptop Asus ROG', 'Laptop gaming high performance untuk kebutuhan berat seperti editing dan gaming.', 25000000, 10,
       'https://ssiayuddvhunioreofxl.supabase.co/storage/v1/object/public/product-image/LaptopROG.jpg',
       (SELECT id FROM users WHERE email = 'ahkong@gmail.com'),
       (SELECT id FROM categories WHERE name = 'laptop'),
       NOW(), NOW()),

      ('8480fd58-9032-4e93-8f88-7608c2b47e02', 'SSD 1TB', 'SSD SATA 2.5 inch dengan kapasitas 1TB cocok untuk upgrade storage laptop dan PC.', 1200000, 25,
       'https://ssiayuddvhunioreofxl.supabase.co/storage/v1/object/public/product-image/SSD.jpeg',
       (SELECT id FROM users WHERE email = 'ahkong@gmail.com'),
       (SELECT id FROM categories WHERE name = 'spare-part'),
       NOW(), NOW()),

      ('b6ce7789-35f6-4e94-97ef-785a31f3d103', 'Soundcore R50i NC', 'TWS dengan Active Noise Cancelling dan battery life hingga 30 jam.', 800000, 30,
       'https://ssiayuddvhunioreofxl.supabase.co/storage/v1/object/public/product-image/Soundcore%20R50i%20NC.webp',
       (SELECT id FROM users WHERE email = 'seluvis@gmail.com'),
       (SELECT id FROM categories WHERE name = 'accessories'),
       NOW(), NOW()),

      ('f083e6a2-c26d-4c68-9b84-f9f2edfc1504', 'Samsung S24 Ultra', 'Smartphone flagship terbaru dari Samsung dengan kamera dan performa luar biasa.', 20000000, 15,
       'https://ssiayuddvhunioreofxl.supabase.co/storage/v1/object/public/product-image/SamsungS24Ultra.jpg',
       (SELECT id FROM users WHERE email = 'seluvis@gmail.com'),
       (SELECT id FROM categories WHERE name = 'hp'),
       NOW(), NOW());